Find the maximum element in each row and each column in a matrix
package com.dsa;
public class Main {
 
    
    public static void largestInColumn(int cols, int[][] arr)
    {
 
        for (int i = 0; i < cols; i++) {
 
           
            int maxm = arr[0][i];
            for (int j = 1; j < arr[i].length; j++)
                if (arr[j][i] > maxm)
                    maxm = arr[j][i];
 
            System.out.println(maxm);
        }
    }
 
   
    public static void main(String[] args)
    {
        int[][] arr = new int[][] { { 3, 4, 1, 8 },
                                    { 1, 4, 9, 11 },
                                    { 76, 34, 21, 1 },
                                    { 2, 1, 4, 5 } };
        
        largestInColumn(4, arr);
    }
}


Search a sorted 2D Matrix
https://leetcode.com/problems/search-a-2d-matrix-ii/

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int i=0,j=matrix[0].length-1;
        while(j>=0){
            int k=matrix.length-1;
            while(i<=k){
                int mid=i+(k-i)/2;
                if(matrix[mid][j]==target) return true;
                else if(matrix[mid][j]<target) i=mid+1;
                else k=mid-1;
            }
            // System.out.println(i);
            j--;
        }
        return false;
    }
}



Find the duplicate number

https://leetcode.com/problems/find-the-duplicate-number/

Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.


Input: nums = [1,3,4,2,2]
Output: 2

Input: nums = [3,1,3,4,2]
Output: 3


class Solution {
    public int findDuplicate(int[] nums) {
        int[] arr = new int[nums.length + 1];
        for (int i = 0; i < nums.length; i++) {
            if (arr[nums[i]] != 0)
                return nums[i];
            arr[nums[i]] = 1;
        }
        return 0;
    }
}
