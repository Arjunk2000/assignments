Finding Missing Number in an array binary search
package com.dsa;
import java.io.*;
 
class Main
{
static int search(int ar[],int size)
{
    int a = 0, b = size - 1;
    int mid = 0;
    while ((b - a) > 1)
    {
        mid = (a + b) / 2;
        if ((ar[a] - a) != (ar[mid] - mid))
            b = mid;
        else if ((ar[b] - b) != (ar[mid] - mid))
            a = mid;
    }
    return (ar[a] + 1);
}
 

public static void main (String[] args)
{
    int ar[] = { 1, 2, 3, 4, 5, 6, 8 };
    int size = ar.length;
    System.out.println("Missing number: " +
                        search(ar, size));
}
}

https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/"
package com.dsa;
import java.util.Arrays;


public class Main {
	public static void main(String[] args) {
		System.out.println(Arrays.toString(twoSum(new int[] {2,7,8,11,15},9)));
	}
	
	public static int[] twoSum(int[] numbers, int target) {
	    int left=0, right=numbers.length-1;
	    while(left<right){
	        if(numbers[left]+numbers[right] == target){
	            return new int[]{left+1, right+1};
	        }else if(numbers[left]+numbers[right] > target){
	            right--;
	        }else{
	            left++;
	        }
	    }
	    return new int[2];
	}
}
